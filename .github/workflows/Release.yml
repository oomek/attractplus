name: Release

on:
  push:
    tags:
      - '**'

env:
  PKG_CONFIG_PATH_x86_64_w64_mingw32_static: /usr/lib/mxe/usr/x86_64-w64-mingw32.static/lib/pkgconfig/

jobs:
  PackageAMx86:
    name: Package ${{ matrix.platform.name }} ${{ matrix.config.name }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        platform:
        - { name: Linux x64 KMS, targetos: linux-x86, video: KMS, amflags: USE_DRM=1 }
        - { name: Linux x64 X11, targetos: linux-x86, video: X11 }
        config:
        - { name: shared, amflags: STATIC=0 }
        - { name: static, amflags: STATIC=1 }

        os: [ ubuntu-24.04, ubuntu-22.04 ]

        exclude:
          - platform: { targetos: linux-x86 }
            config: { name: shared }

    steps:
    - name: AM+ - Checkout
      uses: actions/checkout@v4
      with:
        path: am

    - name: Prepare
      id: vars
      run: |
        if [ "${{ matrix.platform.video }}" = "X11" ]; then
          sed -i 's/DRM_FLAGS \\?= USE_DRM=1/DRM_FLAGS =/' am/debian/rules
        fi
        deb_version="$(head -1 am/debian/changelog | egrep -o "[0-9]+\.[0-9]+\.[0-9]+")"
        docker_image="$(echo "${{ matrix.os }}" | sed "s/-/:/")"
        fe_version=
        case "${GITHUB_REF}" in refs/tags/*) fe_version="${GITHUB_REF#refs/*/}";; esac
        echo "fe_version=${fe_version}" >> $GITHUB_OUTPUT
        echo "deb_version=${deb_version}" >> $GITHUB_OUTPUT
        echo "docker_image=${docker_image}" >> $GITHUB_OUTPUT

    - name: Package AM+
      uses: jtdor/build-deb-action@v1
      env:
        DEB_BUILD_OPTIONS: noautodbgsym
      with:
        buildpackage-opts: --build=binary --no-pre-clean --no-sign
        source-dir: am
        docker-image: ${{ steps.vars.outputs.docker_image }}

    - name: Rename AM+
      run: |
        find ./ -name '*.deb'
        cp -v "./debian/artifacts/attractplus_${{ steps.vars.outputs.deb_version }}_amd64.deb" "attractplus_${{ steps.vars.outputs.deb_version }}_${{ matrix.os }}_${{ matrix.platform.video }}_amd64.deb"

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        path: "./attractplus_${{ steps.vars.outputs.deb_version }}_${{ matrix.os }}_${{ matrix.platform.video }}_amd64.deb"
        name: "attractplus_${{ steps.vars.outputs.deb_version }}_${{ matrix.os }}_${{ matrix.platform.video }}_amd64"
        compression-level: 0

  PackageAMarm:
    name: Package ${{ matrix.platform.name }} ${{ matrix.config.name }} on ${{ matrix.os }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform:
        - { name: armv7,   arch: armhf }
        - { name: aarch64, arch: arm64 }
        config:
        - { name: shared, amflags: STATIC=0 }
        - { name: static, amflags: STATIC=1 }
        video: [ X11, KMS ]
        os: [ bullseye, bookworm ]
        exclude:
          - config: { name: shared }

    steps:
    - name: AM+ - Checkout
      uses: actions/checkout@v4
      with:
        path: am

    - name: Prepare
      id: vars
      run: |
        if [ "${{ matrix.video }}" = "X11" ]; then 
          sed -i 's/DRM_FLAGS \\?= USE_DRM=1/DRM_FLAGS =/' am/debian/rules
        fi
        deb_version="$(head -1 am/debian/changelog | egrep -o "[0-9]+\.[0-9]+\.[0-9]+")"
        fe_version=
        case "${GITHUB_REF}" in refs/tags/*) fe_version="${GITHUB_REF#refs/*/}";; esac
        echo "fe_version=${fe_version}" >> $GITHUB_OUTPUT
        echo "deb_version=${deb_version}" >> $GITHUB_OUTPUT

    - name: Package AM+
      uses: jtdor/build-deb-action@v1
      env:
        DEB_BUILD_OPTIONS: noautodbgsym
      with:
        buildpackage-opts: --build=binary --no-sign --no-pre-clean
        source-dir: am
        host-arch: ${{ matrix.platform.arch }}
        docker-image: debian:${{ matrix.os }}-slim
        #apt-opts: -t ${{ matrix.os }}-backports
        setup-hook: |
          if [ "${{matrix.os}}" = "bookworm" ]; then
            backports_url="http://deb.debian.org/debian"
          else
            backports_url="http://archive.debian.org/debian/"
          fi
          echo "deb ${backports_url} ${{matrix.os}}-backports main" > /etc/apt/sources.list.d/debian-backports.list
          cat /etc/apt/sources.list.d/debian-backports.list
          apt-get update
          apt-get install -y -q build-essential cmake pkgconf libxrandr-dev libxcursor-dev libudev-dev libopenal-dev libflac-dev libvorbis-dev libgl1-mesa-dev libavformat-dev libfontconfig1-dev libfreetype6-dev libswscale-dev libswresample-dev libarchive-dev libjpeg-dev libglu1-mesa-dev libgbm-dev libdrm-dev libegl1-mesa-dev libcurl4-gnutls-dev libboost-filesystem-dev libboost-system-dev libxi-dev ca-certificates
          apt-get install -y -t ${{matrix.os}}-backports cmake

    - name: Rename AM+
      run: |
        find ./ -name '*.deb'
        cp "./debian/artifacts/attractplus_${{ steps.vars.outputs.deb_version }}_${{ matrix.platform.arch }}.deb" "attractplus_${{ steps.vars.outputs.deb_version }}_${{ matrix.os }}_${{ matrix.platform.arch }}_${{ matrix.video }}.deb"

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        path: "./attractplus_${{ steps.vars.outputs.deb_version }}_${{ matrix.os }}_${{ matrix.platform.arch }}_${{ matrix.video }}.deb"
        name: "attractplus_${{ steps.vars.outputs.deb_version }}_${{ matrix.os }}_${{ matrix.platform.arch }}_${{ matrix.video }}"
        compression-level: 0
  
  Windows:
    uses: ./.github/workflows/Windows.yml

  MacOS:
    uses: ./.github/workflows/MacOS.yml

  Release:
    name: Release to Github
    needs: [PackageAMx86, PackageAMarm, Windows, MacOS]
    runs-on: ubuntu-latest

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Prepare artifacts
      id: prepare_artifacts
      run: |
        tag="${GITHUB_REF#refs/*/}"
        echo "current_tag=${tag}" >> $GITHUB_OUTPUT
        mkdir -p "${GITHUB_WORKSPACE}"/artifacts_for_release
        find "${GITHUB_WORKSPACE}"/artifacts/ -type f -name '*.deb' -exec cp -v "{}" "${GITHUB_WORKSPACE}"/artifacts_for_release \;
        7z a "${GITHUB_WORKSPACE}"/artifacts_for_release/"attractplus_${GITHUB_REF#refs/*/}_Windows.7z" ./artifacts/Windows/*
        7z a "${GITHUB_WORKSPACE}"/artifacts_for_release/"attractplus_${GITHUB_REF#refs/*/}_MacOS.7z" ./artifacts/MacOS/*

    - name: Create Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: Attract Mode Plus ${{ steps.prepare_artifacts.outputs.current_tag }}
        draft: true
        prerelease: false
        files: |
          artifacts_for_release/attractplus*.7z
          artifacts_for_release/attractplus*.deb
